// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: hiscenter/hiscenter.proto

package hiscenter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 登录请求参数
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uname    string `protobuf:"bytes,1,opt,name=uname,proto3" json:"uname,omitempty"`
	Upwd     string `protobuf:"bytes,2,opt,name=upwd,proto3" json:"upwd,omitempty"`
	Userdata string `protobuf:"bytes,3,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *LoginRequest) GetUpwd() string {
	if x != nil {
		return x.Upwd
	}
	return ""
}

func (x *LoginRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 当前登录用户参数
type CurrentUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userdata string `protobuf:"bytes,1,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *CurrentUserRequest) Reset() {
	*x = CurrentUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentUserRequest) ProtoMessage() {}

func (x *CurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentUserRequest.ProtoReflect.Descriptor instead.
func (*CurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentUserRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 财务表字段请求参数
type ColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Userdata string `protobuf:"bytes,2,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *ColumnRequest) Reset() {
	*x = ColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnRequest) ProtoMessage() {}

func (x *ColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnRequest.ProtoReflect.Descriptor instead.
func (*ColumnRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{2}
}

func (x *ColumnRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 财务数据请求参数
type FinanceCommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fields   string `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	Filter   string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Page     int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize int32  `protobuf:"varint,5,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata string `protobuf:"bytes,6,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *FinanceCommonRequest) Reset() {
	*x = FinanceCommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinanceCommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinanceCommonRequest) ProtoMessage() {}

func (x *FinanceCommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinanceCommonRequest.ProtoReflect.Descriptor instead.
func (*FinanceCommonRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{3}
}

func (x *FinanceCommonRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FinanceCommonRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *FinanceCommonRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FinanceCommonRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FinanceCommonRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *FinanceCommonRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 资产负债请求参数
type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Fields    string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{4}
}

func (x *BalanceRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BalanceRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *BalanceRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *BalanceRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *BalanceRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 利润分配请求参数
type IncomeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Fields    string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *IncomeRequest) Reset() {
	*x = IncomeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeRequest) ProtoMessage() {}

func (x *IncomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeRequest.ProtoReflect.Descriptor instead.
func (*IncomeRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{5}
}

func (x *IncomeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *IncomeRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *IncomeRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *IncomeRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *IncomeRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 现⾦流请求参数
type CashflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Fields    string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *CashflowRequest) Reset() {
	*x = CashflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowRequest) ProtoMessage() {}

func (x *CashflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowRequest.ProtoReflect.Descriptor instead.
func (*CashflowRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{6}
}

func (x *CashflowRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CashflowRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CashflowRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CashflowRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *CashflowRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 业绩快报请求参数
type PerformanceLettersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Fields    string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *PerformanceLettersRequest) Reset() {
	*x = PerformanceLettersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceLettersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceLettersRequest) ProtoMessage() {}

func (x *PerformanceLettersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceLettersRequest.ProtoReflect.Descriptor instead.
func (*PerformanceLettersRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{7}
}

func (x *PerformanceLettersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PerformanceLettersRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PerformanceLettersRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *PerformanceLettersRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *PerformanceLettersRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 业绩预告请求参数
type PerformanceForecastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Fields    string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *PerformanceForecastRequest) Reset() {
	*x = PerformanceForecastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceForecastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceForecastRequest) ProtoMessage() {}

func (x *PerformanceForecastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceForecastRequest.ProtoReflect.Descriptor instead.
func (*PerformanceForecastRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{8}
}

func (x *PerformanceForecastRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PerformanceForecastRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PerformanceForecastRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *PerformanceForecastRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *PerformanceForecastRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 公司主要财务分析指标(新会计准则)请求参数
type FinIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Indicator string `protobuf:"bytes,4,opt,name=indicator,proto3" json:"indicator,omitempty"`
	Userdata  string `protobuf:"bytes,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *FinIndicatorRequest) Reset() {
	*x = FinIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinIndicatorRequest) ProtoMessage() {}

func (x *FinIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinIndicatorRequest.ProtoReflect.Descriptor instead.
func (*FinIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{9}
}

func (x *FinIndicatorRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FinIndicatorRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *FinIndicatorRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *FinIndicatorRequest) GetIndicator() string {
	if x != nil {
		return x.Indicator
	}
	return ""
}

func (x *FinIndicatorRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// K线请求参数
type CandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	CandleType    string `protobuf:"bytes,4,opt,name=candle_type,json=candleType,proto3" json:"candle_type,omitempty"`
	Fields        string `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	Adj           string `protobuf:"bytes,6,opt,name=adj,proto3" json:"adj,omitempty"`
	Count         int32  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	Userdata      string `protobuf:"bytes,8,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *CandleRequest) Reset() {
	*x = CandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleRequest) ProtoMessage() {}

func (x *CandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleRequest.ProtoReflect.Descriptor instead.
func (*CandleRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{10}
}

func (x *CandleRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CandleRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *CandleRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *CandleRequest) GetCandleType() string {
	if x != nil {
		return x.CandleType
	}
	return ""
}

func (x *CandleRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *CandleRequest) GetAdj() string {
	if x != nil {
		return x.Adj
	}
	return ""
}

func (x *CandleRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CandleRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Alpha101因子请求参数
type Alpha101Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Factor        string `protobuf:"bytes,2,opt,name=factor,proto3" json:"factor,omitempty"`
	StartDateTime string `protobuf:"bytes,3,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,4,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Type          string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Count         int32  `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Alpha101Request) Reset() {
	*x = Alpha101Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alpha101Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alpha101Request) ProtoMessage() {}

func (x *Alpha101Request) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alpha101Request.ProtoReflect.Descriptor instead.
func (*Alpha101Request) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{11}
}

func (x *Alpha101Request) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Alpha101Request) GetFactor() string {
	if x != nil {
		return x.Factor
	}
	return ""
}

func (x *Alpha101Request) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Alpha101Request) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Alpha101Request) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Alpha101Request) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Alpha101Request) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Xbzq191alpha因子请求参数
type Xbzq191AlphaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Factor        string `protobuf:"bytes,2,opt,name=factor,proto3" json:"factor,omitempty"`
	StartDateTime string `protobuf:"bytes,3,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,4,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Type          string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Count         int32  `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Xbzq191AlphaRequest) Reset() {
	*x = Xbzq191AlphaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Xbzq191AlphaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xbzq191AlphaRequest) ProtoMessage() {}

func (x *Xbzq191AlphaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xbzq191AlphaRequest.ProtoReflect.Descriptor instead.
func (*Xbzq191AlphaRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{12}
}

func (x *Xbzq191AlphaRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Xbzq191AlphaRequest) GetFactor() string {
	if x != nil {
		return x.Factor
	}
	return ""
}

func (x *Xbzq191AlphaRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Xbzq191AlphaRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Xbzq191AlphaRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Xbzq191AlphaRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Xbzq191AlphaRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 日历请求参数
type CalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market   string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Year     string `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	Userdata string `protobuf:"bytes,3,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *CalendarRequest) Reset() {
	*x = CalendarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarRequest) ProtoMessage() {}

func (x *CalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarRequest.ProtoReflect.Descriptor instead.
func (*CalendarRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{13}
}

func (x *CalendarRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *CalendarRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *CalendarRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 是否交易日请求参数
type IsTradingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market   string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Date     string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Userdata string `protobuf:"bytes,3,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *IsTradingRequest) Reset() {
	*x = IsTradingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsTradingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTradingRequest) ProtoMessage() {}

func (x *IsTradingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTradingRequest.ProtoReflect.Descriptor instead.
func (*IsTradingRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{14}
}

func (x *IsTradingRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *IsTradingRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *IsTradingRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Lv1快照请求参数
type Lv1SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Fields        string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      int32  `protobuf:"varint,6,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Lv1SnapshotRequest) Reset() {
	*x = Lv1SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lv1SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lv1SnapshotRequest) ProtoMessage() {}

func (x *Lv1SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lv1SnapshotRequest.ProtoReflect.Descriptor instead.
func (*Lv1SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{15}
}

func (x *Lv1SnapshotRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Lv1SnapshotRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Lv1SnapshotRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Lv1SnapshotRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *Lv1SnapshotRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Lv1SnapshotRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *Lv1SnapshotRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 码表请求参数
type SecurityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Fields   string `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	Userdata string `protobuf:"bytes,3,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *SecurityRequest) Reset() {
	*x = SecurityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityRequest) ProtoMessage() {}

func (x *SecurityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityRequest.ProtoReflect.Descriptor instead.
func (*SecurityRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{16}
}

func (x *SecurityRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SecurityRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *SecurityRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Lv2快照请求参数
type Lv2SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Fields        string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      int32  `protobuf:"varint,6,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Lv2SnapshotRequest) Reset() {
	*x = Lv2SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lv2SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lv2SnapshotRequest) ProtoMessage() {}

func (x *Lv2SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lv2SnapshotRequest.ProtoReflect.Descriptor instead.
func (*Lv2SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{17}
}

func (x *Lv2SnapshotRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Lv2SnapshotRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Lv2SnapshotRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Lv2SnapshotRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *Lv2SnapshotRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Lv2SnapshotRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *Lv2SnapshotRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Lv2逐笔成交请求参数
type Lv2TradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Fields        string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      int32  `protobuf:"varint,6,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Lv2TradeRequest) Reset() {
	*x = Lv2TradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lv2TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lv2TradeRequest) ProtoMessage() {}

func (x *Lv2TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lv2TradeRequest.ProtoReflect.Descriptor instead.
func (*Lv2TradeRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{18}
}

func (x *Lv2TradeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Lv2TradeRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Lv2TradeRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Lv2TradeRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *Lv2TradeRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Lv2TradeRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *Lv2TradeRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Lv2逐笔委托请求参数
type Lv2EntrustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Fields        string `protobuf:"bytes,4,opt,name=fields,proto3" json:"fields,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      int32  `protobuf:"varint,6,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Lv2EntrustRequest) Reset() {
	*x = Lv2EntrustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lv2EntrustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lv2EntrustRequest) ProtoMessage() {}

func (x *Lv2EntrustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lv2EntrustRequest.ProtoReflect.Descriptor instead.
func (*Lv2EntrustRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{19}
}

func (x *Lv2EntrustRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Lv2EntrustRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *Lv2EntrustRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *Lv2EntrustRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *Lv2EntrustRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Lv2EntrustRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *Lv2EntrustRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 回放请求参数
type ReplayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Rate          int32  `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Type          string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Userdata      string `protobuf:"bytes,6,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *ReplayRequest) Reset() {
	*x = ReplayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest) ProtoMessage() {}

func (x *ReplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest.ProtoReflect.Descriptor instead.
func (*ReplayRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{20}
}

func (x *ReplayRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReplayRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *ReplayRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *ReplayRequest) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ReplayRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReplayRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 下载K线请求参数
type DownloadCandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	CandleType    string `protobuf:"bytes,4,opt,name=candle_type,json=candleType,proto3" json:"candle_type,omitempty"`
	Fields        string `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	Adj           string `protobuf:"bytes,6,opt,name=adj,proto3" json:"adj,omitempty"`
	Userdata      string `protobuf:"bytes,7,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *DownloadCandleRequest) Reset() {
	*x = DownloadCandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCandleRequest) ProtoMessage() {}

func (x *DownloadCandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCandleRequest.ProtoReflect.Descriptor instead.
func (*DownloadCandleRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{21}
}

func (x *DownloadCandleRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DownloadCandleRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *DownloadCandleRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *DownloadCandleRequest) GetCandleType() string {
	if x != nil {
		return x.CandleType
	}
	return ""
}

func (x *DownloadCandleRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *DownloadCandleRequest) GetAdj() string {
	if x != nil {
		return x.Adj
	}
	return ""
}

func (x *DownloadCandleRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 分时参数
type TimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Day      int32  `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	Userdata string `protobuf:"bytes,3,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *TimelineRequest) Reset() {
	*x = TimelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineRequest) ProtoMessage() {}

func (x *TimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineRequest.ProtoReflect.Descriptor instead.
func (*TimelineRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{22}
}

func (x *TimelineRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TimelineRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *TimelineRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// Lv1分笔明细请求参数
type BargainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartDateTime string `protobuf:"bytes,2,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	EndDateTime   string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	Director      int32  `protobuf:"varint,4,opt,name=director,proto3" json:"director,omitempty"`
	Fields        string `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	Page          int32  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      int32  `protobuf:"varint,7,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Userdata      string `protobuf:"bytes,8,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *BargainRequest) Reset() {
	*x = BargainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BargainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BargainRequest) ProtoMessage() {}

func (x *BargainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BargainRequest.ProtoReflect.Descriptor instead.
func (*BargainRequest) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{23}
}

func (x *BargainRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BargainRequest) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *BargainRequest) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *BargainRequest) GetDirector() int32 {
	if x != nil {
		return x.Director
	}
	return 0
}

func (x *BargainRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *BargainRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BargainRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *BargainRequest) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

// 返回参数
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Data     string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Userdata string `protobuf:"bytes,4,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiscenter_hiscenter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_hiscenter_hiscenter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_hiscenter_hiscenter_proto_rawDescGZIP(), []int{24}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Response) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Response) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

var File_hiscenter_hiscenter_proto protoreflect.FileDescriptor

var file_hiscenter_hiscenter_proto_rawDesc = []byte{
	0x0a, 0x19, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x68, 0x69, 0x73, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x70, 0x77, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x12,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f,
	0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa6, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x95, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x43, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a,
	0x13, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x64, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x64,
	0x6a, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x30, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x01, 0x0a, 0x13, 0x58, 0x62,
	0x7a, 0x71, 0x31, 0x39, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a,
	0x0a, 0x10, 0x49, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x4c,
	0x76, 0x31, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0f, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x4c, 0x76, 0x32,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x4c, 0x76, 0x32, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x4c, 0x76, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe2, 0x01, 0x0a, 0x15,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x64, 0x6a, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x57, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x62, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x61, 0x74, 0x61, 0x32, 0xc5, 0x0c, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x68, 0x69,
	0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x18, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x68,
	0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x19, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x68, 0x69,
	0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08,
	0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x24, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x13, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68,
	0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1e, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x30,
	0x31, 0x12, 0x1a, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x30, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x58, 0x62, 0x7a, 0x71, 0x31, 0x39, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x12, 0x1e, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x58, 0x62, 0x7a, 0x71, 0x31, 0x39, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x1a, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x49, 0x73,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x4c,
	0x76, 0x31, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1d, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x76, 0x31, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x68,
	0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0b, 0x4c, 0x76, 0x32, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1d,
	0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x76, 0x32, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x4c, 0x76, 0x32, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x1a, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x76, 0x32,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68,
	0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x4c, 0x76, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x76,
	0x32, 0x45, 0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x18, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x3d, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x68,
	0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x07, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x68, 0x69, 0x73,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x68, 0x69, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hiscenter_hiscenter_proto_rawDescOnce sync.Once
	file_hiscenter_hiscenter_proto_rawDescData = file_hiscenter_hiscenter_proto_rawDesc
)

func file_hiscenter_hiscenter_proto_rawDescGZIP() []byte {
	file_hiscenter_hiscenter_proto_rawDescOnce.Do(func() {
		file_hiscenter_hiscenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_hiscenter_hiscenter_proto_rawDescData)
	})
	return file_hiscenter_hiscenter_proto_rawDescData
}

var file_hiscenter_hiscenter_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_hiscenter_hiscenter_proto_goTypes = []interface{}{
	(*LoginRequest)(nil),               // 0: hiscenter.LoginRequest
	(*CurrentUserRequest)(nil),         // 1: hiscenter.CurrentUserRequest
	(*ColumnRequest)(nil),              // 2: hiscenter.ColumnRequest
	(*FinanceCommonRequest)(nil),       // 3: hiscenter.FinanceCommonRequest
	(*BalanceRequest)(nil),             // 4: hiscenter.BalanceRequest
	(*IncomeRequest)(nil),              // 5: hiscenter.IncomeRequest
	(*CashflowRequest)(nil),            // 6: hiscenter.CashflowRequest
	(*PerformanceLettersRequest)(nil),  // 7: hiscenter.PerformanceLettersRequest
	(*PerformanceForecastRequest)(nil), // 8: hiscenter.PerformanceForecastRequest
	(*FinIndicatorRequest)(nil),        // 9: hiscenter.FinIndicatorRequest
	(*CandleRequest)(nil),              // 10: hiscenter.CandleRequest
	(*Alpha101Request)(nil),            // 11: hiscenter.Alpha101Request
	(*Xbzq191AlphaRequest)(nil),        // 12: hiscenter.Xbzq191alphaRequest
	(*CalendarRequest)(nil),            // 13: hiscenter.CalendarRequest
	(*IsTradingRequest)(nil),           // 14: hiscenter.IsTradingRequest
	(*Lv1SnapshotRequest)(nil),         // 15: hiscenter.Lv1SnapshotRequest
	(*SecurityRequest)(nil),            // 16: hiscenter.SecurityRequest
	(*Lv2SnapshotRequest)(nil),         // 17: hiscenter.Lv2SnapshotRequest
	(*Lv2TradeRequest)(nil),            // 18: hiscenter.Lv2TradeRequest
	(*Lv2EntrustRequest)(nil),          // 19: hiscenter.Lv2EntrustRequest
	(*ReplayRequest)(nil),              // 20: hiscenter.ReplayRequest
	(*DownloadCandleRequest)(nil),      // 21: hiscenter.DownloadCandleRequest
	(*TimelineRequest)(nil),            // 22: hiscenter.TimelineRequest
	(*BargainRequest)(nil),             // 23: hiscenter.BargainRequest
	(*Response)(nil),                   // 24: hiscenter.Response
}
var file_hiscenter_hiscenter_proto_depIdxs = []int32{
	0,  // 0: hiscenter.Hiscenter.Login:input_type -> hiscenter.LoginRequest
	1,  // 1: hiscenter.Hiscenter.CurrentUser:input_type -> hiscenter.CurrentUserRequest
	2,  // 2: hiscenter.Hiscenter.Column:input_type -> hiscenter.ColumnRequest
	3,  // 3: hiscenter.Hiscenter.FinanceCommon:input_type -> hiscenter.FinanceCommonRequest
	4,  // 4: hiscenter.Hiscenter.Balance:input_type -> hiscenter.BalanceRequest
	5,  // 5: hiscenter.Hiscenter.Income:input_type -> hiscenter.IncomeRequest
	6,  // 6: hiscenter.Hiscenter.Cashflow:input_type -> hiscenter.CashflowRequest
	7,  // 7: hiscenter.Hiscenter.PerformanceLetters:input_type -> hiscenter.PerformanceLettersRequest
	8,  // 8: hiscenter.Hiscenter.PerformanceForecast:input_type -> hiscenter.PerformanceForecastRequest
	9,  // 9: hiscenter.Hiscenter.FinIndicator:input_type -> hiscenter.FinIndicatorRequest
	10, // 10: hiscenter.Hiscenter.Candle:input_type -> hiscenter.CandleRequest
	11, // 11: hiscenter.Hiscenter.Alpha101:input_type -> hiscenter.Alpha101Request
	12, // 12: hiscenter.Hiscenter.Xbzq191alpha:input_type -> hiscenter.Xbzq191alphaRequest
	13, // 13: hiscenter.Hiscenter.Calendar:input_type -> hiscenter.CalendarRequest
	14, // 14: hiscenter.Hiscenter.IsTrading:input_type -> hiscenter.IsTradingRequest
	15, // 15: hiscenter.Hiscenter.Lv1Snapshot:input_type -> hiscenter.Lv1SnapshotRequest
	16, // 16: hiscenter.Hiscenter.Security:input_type -> hiscenter.SecurityRequest
	17, // 17: hiscenter.Hiscenter.Lv2Snapshot:input_type -> hiscenter.Lv2SnapshotRequest
	18, // 18: hiscenter.Hiscenter.Lv2Trade:input_type -> hiscenter.Lv2TradeRequest
	19, // 19: hiscenter.Hiscenter.Lv2Entrust:input_type -> hiscenter.Lv2EntrustRequest
	20, // 20: hiscenter.Hiscenter.Replay:input_type -> hiscenter.ReplayRequest
	21, // 21: hiscenter.Hiscenter.DownloadCandle:input_type -> hiscenter.DownloadCandleRequest
	22, // 22: hiscenter.Hiscenter.Timeline:input_type -> hiscenter.TimelineRequest
	23, // 23: hiscenter.Hiscenter.Bargain:input_type -> hiscenter.BargainRequest
	24, // 24: hiscenter.Hiscenter.Login:output_type -> hiscenter.Response
	24, // 25: hiscenter.Hiscenter.CurrentUser:output_type -> hiscenter.Response
	24, // 26: hiscenter.Hiscenter.Column:output_type -> hiscenter.Response
	24, // 27: hiscenter.Hiscenter.FinanceCommon:output_type -> hiscenter.Response
	24, // 28: hiscenter.Hiscenter.Balance:output_type -> hiscenter.Response
	24, // 29: hiscenter.Hiscenter.Income:output_type -> hiscenter.Response
	24, // 30: hiscenter.Hiscenter.Cashflow:output_type -> hiscenter.Response
	24, // 31: hiscenter.Hiscenter.PerformanceLetters:output_type -> hiscenter.Response
	24, // 32: hiscenter.Hiscenter.PerformanceForecast:output_type -> hiscenter.Response
	24, // 33: hiscenter.Hiscenter.FinIndicator:output_type -> hiscenter.Response
	24, // 34: hiscenter.Hiscenter.Candle:output_type -> hiscenter.Response
	24, // 35: hiscenter.Hiscenter.Alpha101:output_type -> hiscenter.Response
	24, // 36: hiscenter.Hiscenter.Xbzq191alpha:output_type -> hiscenter.Response
	24, // 37: hiscenter.Hiscenter.Calendar:output_type -> hiscenter.Response
	24, // 38: hiscenter.Hiscenter.IsTrading:output_type -> hiscenter.Response
	24, // 39: hiscenter.Hiscenter.Lv1Snapshot:output_type -> hiscenter.Response
	24, // 40: hiscenter.Hiscenter.Security:output_type -> hiscenter.Response
	24, // 41: hiscenter.Hiscenter.Lv2Snapshot:output_type -> hiscenter.Response
	24, // 42: hiscenter.Hiscenter.Lv2Trade:output_type -> hiscenter.Response
	24, // 43: hiscenter.Hiscenter.Lv2Entrust:output_type -> hiscenter.Response
	24, // 44: hiscenter.Hiscenter.Replay:output_type -> hiscenter.Response
	24, // 45: hiscenter.Hiscenter.DownloadCandle:output_type -> hiscenter.Response
	24, // 46: hiscenter.Hiscenter.Timeline:output_type -> hiscenter.Response
	24, // 47: hiscenter.Hiscenter.Bargain:output_type -> hiscenter.Response
	24, // [24:48] is the sub-list for method output_type
	0,  // [0:24] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_hiscenter_hiscenter_proto_init() }
func file_hiscenter_hiscenter_proto_init() {
	if File_hiscenter_hiscenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hiscenter_hiscenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinanceCommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceLettersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceForecastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alpha101Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Xbzq191AlphaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalendarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsTradingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lv1SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lv2SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lv2TradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lv2EntrustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BargainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiscenter_hiscenter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hiscenter_hiscenter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hiscenter_hiscenter_proto_goTypes,
		DependencyIndexes: file_hiscenter_hiscenter_proto_depIdxs,
		MessageInfos:      file_hiscenter_hiscenter_proto_msgTypes,
	}.Build()
	File_hiscenter_hiscenter_proto = out.File
	file_hiscenter_hiscenter_proto_rawDesc = nil
	file_hiscenter_hiscenter_proto_goTypes = nil
	file_hiscenter_hiscenter_proto_depIdxs = nil
}
